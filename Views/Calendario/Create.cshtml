@model Calendario.Models.Principal

@{
    ViewData["Title"] = "Crear nuevo registro";
}

<h2>@ViewData["Title"]</h2>

<div class="row">
    <div class="col-md-8">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="GlobalId" class="control-label">Global</label>
                <select asp-for="GlobalId" class="form-control">
                    <option value="">-- Select Global --</option>
                    @foreach (var item in ViewBag.Globals)
                    {
                        <option value="@item.Id">@item.NomGlo</option>
                    }
                </select>
                <span asp-validation-for="GlobalId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="EspecificoId" class="control-label">Específico</label>
                <select asp-for="EspecificoId" class="form-control">
                    <option value="">-- Select Específico --</option>
                    @foreach (var item in ViewBag.Especificos)
                    {
                        <option value="@item.Id">@item.NomEsp</option>
                    }
                </select>
                <span asp-validation-for="EspecificoId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="RespAcademicoId" class="control-label">Responsable Académico</label>
                <select asp-for="RespAcademicoId" class="form-control">
                    <option value="">-- Select Responsable Académico --</option>
                    @foreach (var item in ViewBag.Respacademico)
                    {
                        <option value="@item.Id">@item.NomAcad</option>
                    }
                </select>
                <span asp-validation-for="RespAcademicoId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="RespOperadorId" class="control-label">Responsable Operador</label>
                <select asp-for="RespOperadorId" class="form-control">
                    <option value="">-- Select Responsable Operador --</option>
                    @foreach (var item in ViewBag.Respoperador)
                    {
                        <option value="@item.Id">@item.NomOpe</option>
                    }
                </select>
                <span asp-validation-for="RespOperadorId" class="text-danger"></span>
            </div>

            <hr />
            <h4>Ambientes</h4>

            <div id="ambientes-container">
                <!-- Los ambientes se añadirán aquí -->
                @if (Model?.AmbienteA != null && Model.AmbienteA.Count > 0)
                {
                    @for (int i = 0; i < Model.AmbienteA.Count; i++)
                    {
                        <div class="ambiente-grupo">
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="control-label">Fecha</label>
                                        <input type="date" name="AmbienteA[@i].Fecha" class="form-control"
                                              value="@Model.AmbienteA[i].Fecha.ToString("yyyy-MM-dd")" />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="control-label">Hora Inicio</label>
                                        <div class="d-flex">
                                            @{
                                                int horaInicio = Model.AmbienteA[i].HoraInicio.Hours;
                                                int minInicio = Model.AmbienteA[i].HoraInicio.Minutes;
                                            }
                                            <select class="form-control hora-select" style="width:50%" 
                                                    data-index="@i" data-tipo="inicio">
                                                @for(int h = 0; h < 24; h++) {
    var selected = (h == horaInicio) ? "selected" : "";
    <option value="@h.ToString("D2")" selected="@selected">@h.ToString("D2")</option>
}

                                            </select>
                                            <span class="align-self-center mx-1">:</span>
                                            <select class="form-control minuto-select" style="width:50%" 
                                                    data-index="@i" data-tipo="inicio">
                                                @{
    var minutos = new[] { 0, 15, 30, 45 };
}
@foreach (var min in minutos) {
    var selected = (min == minInicio) ? "selected" : "";
    <option value="@min.ToString("D2")" selected="@selected">@min.ToString("D2")</option>
}

                                            </select>
                                            <input type="hidden" name="AmbienteA[@i].HoraInicio" 
                                                   id="horaInicio@(i)" 
                                                   value="@Model.AmbienteA[i].HoraInicio.ToString(@"hh\:mm")" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="control-label">Hora Fin</label>
                                        <div class="d-flex">
                                            @{
                                                int horaFin = Model.AmbienteA[i].HoraFin.Hours;
                                                int minFin = Model.AmbienteA[i].HoraFin.Minutes;
                                            }
                                            <select class="form-control hora-select" style="width:50%" 
                                                    data-index="@i" data-tipo="fin">
                                                @for(int h = 0; h < 24; h++) {
    var selected = (h == horaFin) ? "selected" : "";
    <option value="@h.ToString("D2")" selected="@selected">@h.ToString("D2")</option>
}

                                            </select>
                                            <span class="align-self-center mx-1">:</span>
                                            <select class="form-control minuto-select" style="width:50%" 
                                                    data-index="@i" data-tipo="fin">
                                                @{
    var minFinList = new[] { 0, 15, 30, 45 };
}
@foreach (var min in minFinList)
{
    var selected = (min == minFin) ? "selected" : "";
    <option value="@min.ToString("D2")" selected="@selected">@min.ToString("D2")</option>
}

                                            </select>
                                            <input type="hidden" name="AmbienteA[@i].HoraFin" 
                                                   id="horaFin@(i)" 
                                                   value="@Model.AmbienteA[i].HoraFin.ToString(@"hh\:mm")" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Ambiente</label>
                                        <select class="form-control" name="AmbienteA[@i].AmbienteId">
                                            <option value="">-- Seleccione un ambiente --</option>
                                            @foreach (var ambiente in ViewBag.Ambientes)
{
    var selected = (Model.AmbienteA[i].AmbienteId == ambiente.Id) ? "selected" : "";
    <option value="@ambiente.Id" selected="@selected">@ambiente.NomAmb</option>
}

                                        </select>
                                    </div>
                                </div>
                            </div>
                            <button type="button" class="btn btn-danger btn-sm remove-ambiente">Eliminar</button>
                            <hr />
                        </div>
                    }
                }
            </div>

            <button type="button" id="agregar-ambiente" class="btn btn-success mb-3">Agregar Ambiente</button>

            <div class="form-group mt-3">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        const optionsHtml = `@Html.Raw(string.Join("", ((List<Calendario.Models.Ambiente>)ViewBag.Ambientes).Select(a => $"<option value='{a.Id}'>{a.NomAmb}</option>")))`;

        $(document).ready(function () {
            // Contador para mantener un índice único para cada nuevo ambiente
            let ambienteCount = @(Model?.AmbienteA?.Count ?? 0);

            // Función para actualizar los valores ocultos de tiempo
            function actualizarTiempoOculto(index, tipo) {
                const hora = $(`select.hora-select[data-index="${index}"][data-tipo="${tipo}"]`).val();
                const minuto = $(`select.minuto-select[data-index="${index}"][data-tipo="${tipo}"]`).val();
                const tiempoCompleto = `${hora}:${minuto}`;
                
                if (tipo === 'inicio') {
                    $(`#horaInicio${index}`).val(tiempoCompleto);
                } else {
                    $(`#horaFin${index}`).val(tiempoCompleto);
                }
            }

            // Manejar cambios en los selectores de hora y minutos
            $(document).on('change', '.hora-select, .minuto-select', function() {
                const index = $(this).data('index');
                const tipo = $(this).data('tipo');
                actualizarTiempoOculto(index, tipo);
            });

            // Inicializar los campos ocultos para registros existentes
            $('.hora-select, .minuto-select').each(function() {
                const index = $(this).data('index');
                const tipo = $(this).data('tipo');
                actualizarTiempoOculto(index, tipo);
            });

            // Función para agregar nuevos ambientes
            $("#agregar-ambiente").click(function () {
                addAmbiente();
            });

            // Función para agregar un solo ambiente
            function addAmbiente() {
                const ambienteHtml = `
                    <div class="ambiente-grupo">
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Fecha</label>
                                    <input type="date" name="AmbienteA[${ambienteCount}].Fecha" class="form-control" required />
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Hora Inicio</label>
                                    <div class="d-flex">
                                        <select class="form-control hora-select" style="width:50%" 
                                                data-index="${ambienteCount}" data-tipo="inicio">
                                            ${generarOpcionesHora()}
                                        </select>
                                        <span class="align-self-center mx-1">:</span>
                                        <select class="form-control minuto-select" style="width:50%" 
                                                data-index="${ambienteCount}" data-tipo="inicio">
                                            <option value="00">00</option>
                                            <option value="15">15</option>
                                            <option value="30">30</option>
                                            <option value="45">45</option>
                                        </select>
                                        <input type="hidden" name="AmbienteA[${ambienteCount}].HoraInicio" 
                                               id="horaInicio${ambienteCount}" value="00:00" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Hora Fin</label>
                                    <div class="d-flex">
                                        <select class="form-control hora-select" style="width:50%" 
                                                data-index="${ambienteCount}" data-tipo="fin">
                                            ${generarOpcionesHora()}
                                        </select>
                                        <span class="align-self-center mx-1">:</span>
                                        <select class="form-control minuto-select" style="width:50%" 
                                                data-index="${ambienteCount}" data-tipo="fin">
                                            <option value="00">00</option>
                                            <option value="15">15</option>
                                            <option value="30">30</option>
                                            <option value="45">45</option>
                                        </select>
                                        <input type="hidden" name="AmbienteA[${ambienteCount}].HoraFin" 
                                               id="horaFin${ambienteCount}" value="00:00" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Ambiente</label>
                                    <select name="AmbienteA[${ambienteCount}].AmbienteId" class="form-control" required>
                                        <option value="">-- Seleccione un ambiente --</option>
                                        ${optionsHtml}
                                    </select>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn btn-danger btn-sm remove-ambiente">Eliminar</button>
                        <hr />
                    </div>
                `;

                $("#ambientes-container").append(ambienteHtml);
                
                // Inicializar los campos ocultos para el nuevo ambiente
                actualizarTiempoOculto(ambienteCount, 'inicio');
                actualizarTiempoOculto(ambienteCount, 'fin');
                
                ambienteCount++;
            }

            // Función para generar opciones de horas (0-23)
            function generarOpcionesHora() {
                let options = '';
                for(let h = 0; h < 24; h++) {
                    const formattedHour = h.toString().padStart(2, '0');
                    options += `<option value="${formattedHour}">${formattedHour}</option>`;
                }
                return options;
            }

            // Manejador para eliminar un ambiente
            $(document).on("click", ".remove-ambiente", function () {
                $(this).closest(".ambiente-grupo").remove();
            });
        });
    </script>
}