// <auto-generated />
using System;
using Calendario.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Calendario.Migrations
{
    [DbContext(typeof(CalendarioContext))]
    [Migration("20250412003020_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Calendario.Models.Ambiente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NomAmb")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("t_ambiente");
                });

            modelBuilder.Entity("Calendario.Models.AmbienteA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AmbienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("interval");

                    b.Property<int>("PrincipalId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.HasIndex("PrincipalId");

                    b.ToTable("t_ambientea");
                });

            modelBuilder.Entity("Calendario.Models.Especifico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NomEsp")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("t_especifico");
                });

            modelBuilder.Entity("Calendario.Models.Global", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NomGlo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("t_global");
                });

            modelBuilder.Entity("Calendario.Models.Principal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EspecificoId")
                        .HasColumnType("integer");

                    b.Property<int>("GlobalId")
                        .HasColumnType("integer");

                    b.Property<int>("RespAcademicoId")
                        .HasColumnType("integer");

                    b.Property<int>("RespOperadorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EspecificoId");

                    b.HasIndex("GlobalId");

                    b.HasIndex("RespAcademicoId");

                    b.HasIndex("RespOperadorId");

                    b.ToTable("t_principal");
                });

            modelBuilder.Entity("Calendario.Models.RespAcademico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NomAcad")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("t_respacademico");
                });

            modelBuilder.Entity("Calendario.Models.RespOperador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NomOpe")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("t_respoperador");
                });

            modelBuilder.Entity("Calendario.Models.AmbienteA", b =>
                {
                    b.HasOne("Calendario.Models.Ambiente", "Ambiente")
                        .WithMany()
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Calendario.Models.Principal", "Principal")
                        .WithMany("AmbienteA")
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");

                    b.Navigation("Principal");
                });

            modelBuilder.Entity("Calendario.Models.Principal", b =>
                {
                    b.HasOne("Calendario.Models.Especifico", "Especifico")
                        .WithMany()
                        .HasForeignKey("EspecificoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Calendario.Models.Global", "Global")
                        .WithMany()
                        .HasForeignKey("GlobalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Calendario.Models.RespAcademico", "RespAcademico")
                        .WithMany()
                        .HasForeignKey("RespAcademicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Calendario.Models.RespOperador", "RespOperador")
                        .WithMany()
                        .HasForeignKey("RespOperadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Especifico");

                    b.Navigation("Global");

                    b.Navigation("RespAcademico");

                    b.Navigation("RespOperador");
                });

            modelBuilder.Entity("Calendario.Models.Principal", b =>
                {
                    b.Navigation("AmbienteA");
                });
#pragma warning restore 612, 618
        }
    }
}
